swagger: "2.0"
info:
  description: Swagger for Generate Document
  version: "1.0.0"
  title: Generate Documents 
consumes:
  - application/json

basePath: /

paths:
  /v1/ping:
    get:
      tags:
      - "API_Check"
      summary: "ping pong application"
      description: "ping pong check"
      operationId: routes.ping
      responses:
        500:
          description: Server error
        200:
          description: Ping Successful
          schema:
            type: string


  /v1/download/template_guide:
    get:
      tags:
        - "Template Guide"
      summary: "Download template guide"
      description: "Download template guide"
      operationId: routes.download_template
      responses:
        500:
          description:  Error while creating the file


  /v1/create_documents:
    post:
      tags:
        - "Generate Documents"
      summary: "Generates documents."
      description: "This Api is used to create the Documents dynamically"
      operationId: "routes.create_doc"
      consumes:
        - "multipart/form-data"    
      produces:
        - "application/zip"
      parameters:
        - in: formData
          name: Template
          type: file
          description: The template to upload (.docx file)
          required: true
        - in: formData
          name: Data
          type: file
          description: The Data to be used (.xslx file)
          required: true
        - name: "file_format"
          in: "query"
          description: "Status values that need to be considered for filter"
          required: true
          type: "string"
          enum: ["pdf", "word/docx"]
      responses:
        500:
          description: Error while sending the file

  /v1/query-documents:
    post:
      tags:
        - "Generate Documents"
      summary: "Generates documents using query"
      description: "This Api is used to create the Documents using query"
      operationId: "routes.query_doc"
      consumes:
        - "multipart/form-data"    
      produces:
        - "application/zip"
      parameters:
        - in: formData
          name: Template
          type: file
          description: The template to upload (.docx file)
          required: true
        - in: query
          name: Data
          type: string
          description: The Database query to be used
          required: true
        - name: "file_format"
          in: "query"
          description: "Status values that need to be considered for filter"
          required: true
          type: "string"
          enum: ["pdf", "word/docx"]
      responses:
        500:
          description: Error while sending the file
